cmake_minimum_required(VERSION 3.5.2)
project(DNNLibrary)

option(DNN_BUILD_BIN "Build binaries" ON)
option(DNN_BUILD_JNI "Build Java Wrapper" OFF)
option(DNN_READ_ONNX "Read ONNX model directly instead of converting to .daq" OFF)
option(DNN_SYSTEM_PROTOBUF "Use system protobuf when building onnx2daq" OFF)
option(DNN_BUILD_PYTHON "Build Python wrapper for onnx2daq" ON)

include(cmake/system.cmake)
include(cmake/glog.cmake)
include(cmake/common.cmake)

configure_glog()

if (${CMAKE_SYSTEM_NAME} STREQUAL "Android")
    set (CMAKE_CXX_STANDARD 17)

    add_compile_options(-Os)
    if (${DNN_READ_ONNX} AND NOT TARGET onnx)
        include(cmake/onnx.cmake)
        configure_onnx()
        set(ONNX2DAQ_ONLY_LIB ON)
        add_subdirectory(tools)
    else()
        add_compile_options(-fno-rtti)
    endif()
    add_subdirectory(dnnlibrary)
    add_subdirectory(binaries)
else()
    include(cmake/utils.cmake)
    dnn_add_msvc_runtime_flag()
    set (CMAKE_CXX_STANDARD 11)
    include(cmake/onnx.cmake)
    configure_onnx()
    if (${DNN_BUILD_PYTHON})
        add_subdirectory(third_party/pybind11)
    endif()
    add_subdirectory(tools)
endif()
